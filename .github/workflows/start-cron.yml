name: Start Cron Loop

on:
  workflow_dispatch:
  push:
    paths:
      - 'restart.txt'

jobs:
  start:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get install jq

      - name: Generate and Trigger Cron Jobs
        run: |
          mkdir -p .github/workflows
          now=$(date +%s)
          cronTimes=$(jq -n --arg now "$now" '[0,1,2,3,4] | map(($now | tonumber) + (. * 60) | strftime("%M %H * * *"))')
          pending=$(echo "$cronTimes" | jq -r '.[] | {"cron": ., "status": "pending"}' | jq -s '.')
          echo "$pending" > pending.json
          cat <<EOF > .github/workflows/cron-jobs.yml
          name: Scheduled Cron Jobs
          on:
            schedule:
          $(echo "$cronTimes" | jq -r '.[] | "    - cron: \(. | tostring)"')
          jobs:
            execute-cron:
              runs-on: ubuntu-latest
              steps:
                - name: Checkout
                  uses: actions/checkout@v4
                - name: Install jq
                  run: sudo apt-get install jq
                - name: Execute Cron
                  run: |
                    timestamp=\$(date -u -Iseconds)
                    cron=\$(date -u +"%M %H * * *")

                    executed=\$(cat executed.json 2>/dev/null || echo '[]')
                    executed=\$(echo "\$executed" | jq -c ". + [{\"cron\": \"\$cron\", \"timestamp\": \"\$timestamp\", \"status\": \"done\"}]")
                    echo "\$executed" > executed.json

                    pending=\$(cat pending.json 2>/dev/null || echo '[]')
                    pending=\$(echo "\$pending" | jq -c --arg cron "\$cron" 'map(select(.cron != \$cron))')
                    echo "\$pending" > pending.json

                    remaining=\$(echo "\$pending" | jq 'length')
                    if [ "\$remaining" -eq 0 ] && [ ! -f stop.json ]; then
                      echo "Restarting..." > restart.txt
                    fi
                - name: Commit Changes
                  uses: stefanzweifel/git-auto-commit-action@v5
                  with:
                    commit_message: 'Update executed and pending jobs'
                    file_pattern: 'executed.json pending.json restart.txt'
          EOF
          echo "Generated cron times: \$cronTimes"

      - name: Commit Changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'Update cron jobs and pending'
          file_pattern: '.github/workflows/cron-jobs.yml pending.json restart.txt'

      - name: Clean Restart File
        if: always()
        run: |
          if [ -f restart.txt ]; then
            rm -f restart.txt
            git add restart.txt
            git commit -m "Clean restart file" || echo "No changes"
            git push || echo "Push skipped"
          fi
